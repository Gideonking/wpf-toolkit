<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Border 1-->
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" Width="24" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="14"/>
                            </Grid.ColumnDefinitions>

                            <!--Icon container-->
                            <Border Name="IconBorder"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    Margin="2">
                                <ContentPresenter x:Name="Icon" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ContentSource="Icon"/>
                            </Border>

                            <!--Checkmark-->
                            <Polygon Name="GlyphPanel" 
                                     Points="398.218,92.985 199.729,291.475 113.754,205.476 50,269.242 199.733,419.015 462,156.726"
                                     Stretch="Uniform"
                                     Height="8"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Visibility="Collapsed"
                                     Fill="{TemplateBinding MenuItem.Foreground}" />

                            <!--Menu item content-->
                            <ContentPresenter Grid.Column="1" 
                                              Margin="{TemplateBinding Padding}" 
                                              x:Name="HeaderHost" 
                                              RecognizesAccessKey="True" 
                                              ContentSource="Header" 
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="Center"/>

                            <!--Input guesture shortcut text-->
                            <ContentPresenter Grid.Column="2" 
                                              Margin="24,1,8,1" 
                                              x:Name="IGTHost" 
                                              ContentSource="InputGestureText" 
                                              VerticalAlignment="Center"/>

                            <!--Right arrow for subitems, if any-->
                            <Path Grid.Column="3" 
                                  Margin="4,0,6,0" 
                                  x:Name="ArrowPanel"
                                  HorizontalAlignment="Right" 
                                  VerticalAlignment="Center" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Data="M0,0 L0,8 L4,4 z"/>

                            <!--Subitems popup-->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Placement="Right" 
                                   HorizontalOffset="-1" 
                                   x:Name="SubMenuPopup" 
                                   Focusable="False"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <Border x:Name="SubMenuBorder" 
                                            BorderBrush="{DynamicResource BorderBrush}"
                                            BorderThickness="1" 
                                            Background="{DynamicResource BackgroundBrush}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,4"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                            <Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="0"/>
                            <Setter TargetName="Col0" Property="Width" Value="Auto"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <!--<Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>-->
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem"> 
                            <Setter Property="Padding" Value="6,0,6,4"/>
                            <Setter TargetName="Col0" Property="Width" Value="Auto"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="6,2,0,4"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="6,2,0,4"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHoverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" TargetName="IconBorder" />
                            <Setter Property="BorderThickness" Value="1" TargetName="IconBorder" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Icon" Value="{x:Null}" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderBrush" Value="Transparent" TargetName="IconBorder" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,2" />
        <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
    </Style>
    
</ResourceDictionary>